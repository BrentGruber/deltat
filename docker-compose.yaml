version: '3.7'

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - deltat

  loki:
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - deltat

  promtail:
    depends_on:
      - loki
    image: grafana/promtail
    networks:
      - deltat

  cadvisor:
    image: google/cadvisor:v0.33.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - deltat

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - deltat


  prometheus:
    image: prom/prometheus:v2.7.1
    volumes:
      - ./config/prometheus:/app.cfg
    networks:
      - deltat
    command: >-
      --config.file=/app.cfg/prometheus.yaml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles

  otel-collector:
    image: otel/opentelemetry-collector:0.25.0
    volumes:
      - ./config/otel/otel-collector.yaml:/config/otel-collector.yaml
    command:
      - --config=/config/otel-collector.yaml
    networks:
      - deltat
    
  tempo:
    image: grafana/tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./config/tempo/tempo-local.yaml:/etc/tempo.yaml
    networks:
      - deltat

  grafana:
    depends_on:
      - loki
      - tempo
      - prometheus
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: test
    networks:
      - deltat
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - deltat
    
  mongoexpress:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - deltat
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mongoexpress.loadbalancer.server.port=8081"
      - "traefik.http.routers.mongoexpress.rule=Host(`mongoexpress.localhost`)"
      - "traefik.http.routers.mongoexpress.entrypoints=web"

  api:
    build:
      context: ./src/CoreService
      dockerfile: Dockerfile
    env_file:
      - ./src/CoreService/.env
    volumes:
      - ./src/CoreService:/app
    networks:
      - deltat
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.gateway.loadbalancer.server.port=8000"
      - "traefik.http.routers.gateway.rule=Host(`api.localhost`)"
      - "traefik.http.routers.gateway.entrypoints=web"

networks:
  deltat:
    driver: bridge